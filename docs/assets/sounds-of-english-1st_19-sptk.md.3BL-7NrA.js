import{_ as s,c as a,o as p,a4 as t}from"./chunks/framework.DHvAMLos.js";const _=JSON.parse('{"title":"2.2.7. sp, st, str, sk","description":"","frontmatter":{},"headers":[],"relativePath":"sounds-of-english-1st/19-sptk.md","filePath":"sounds-of-english-1st/19-sptk.md"}'),n={name:"sounds-of-english-1st/19-sptk.md"},o=t('<h1 id="_2-2-7-sp-st-str-sk" tabindex="-1">2.2.7. <span class="pho">sp, st, str, sk</span> <a class="header-anchor" href="#_2-2-7-sp-st-str-sk" aria-label="Permalink to &quot;2.2.7. &lt;span class=&quot;pho&quot;&gt;sp, st, str, sk&lt;/span&gt;&quot;">​</a></h1><p><span class="pho">p, t, k</span> 这三个清辅音对应着三个浊辅音： <span class="pho">b, d, g</span>。</p><p>需要注意的是，<span class="pho">p, t, k</span> 这三个清辅音在 <span class="pho">s</span> 之后的时候会发生 “浊化” 现象。另外请注意，<span class="pho">tr</span> 也会在 <span class="pho">s</span> 之后变成 <span class="pho">dr</span>。</p><blockquote><ul><li><em>speak</em> <span class="pho alt">spiːk</span> 实际上读作 <span class="pho alt">sbiːk</span><span class="speak-word-inline" data-audio-uk="/audios/speak-uk.mp3" data-audio-us="/audios/speak-us.mp3"></span></li><li><em>student</em> <span class="pho alt">ˈstudənt</span> 实际上读作 <span class="pho alt">ˈsdudənt</span><span class="speak-word-inline" data-audio-uk="/audios/student-uk.mp3" data-audio-us="/audios/student-us.mp3"></span></li><li><em>school</em> <span class="pho alt">skuːl</span> 实际上读作 <span class="pho alt">sguːl</span><span class="speak-word-inline" data-audio-uk="/audios/school-uk.mp3" data-audio-us="/audios/school-us.mp3"></span></li><li><em>frustrate</em> <span class="pho alt">ˈfrʌˌstreɪt</span> 实际上读作 <span class="pho alt">ˈfrʌˌsdreɪt</span><span class="speak-word-inline" data-audio-uk="/audios/frustrate-uk.mp3" data-audio-us="/audios/frustrate-us.mp3"></span></li></ul></blockquote>',4),e=[o];function l(u,d,i,c,r,h){return p(),a("div",null,e)}const m=s(n,[["render",l]]);export{_ as __pageData,m as default};
